struct baby {
int age?
str annoying?
arr int a?
}


int main(){

  str con?
  str final?
  str cat?
  str alongString?
  str lowString?
  str upString?
  int len?
  str a?
  str b?
  str c?
  str months?

  arr struct baby babies?
  struct baby geffen?
  struct baby ben?

  geffen.a = [1, 2]?
  ben.a = [2, 3]?
  geffen.age = ben.a@0?
  babies = [geffen, ben]?
  babies@1.a[0] = 2?
  babies@1.age = babies@1.a@0?
  
  alongString = "my length is 15"?
  len = strlen(alongString)?

  a = "a"?
  b = "b"?
  c = "a"?
  months = "JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC"?

  printstring("this should print may")?
  printstring(split(months, ",", 4))?
  printstring("this should print april")?
  printstring(split(months, ",", 3))?
  printstring("this should print january")?
  printstring(split(months, ",", 0))?
  
  printstring("String len is: ")?
  print(len)?
  printstring("")?

  lowString = getUp(alongString)?
  upString = getLow(lowString)?

  printstring(lowString)?
  printstring(upString)? 

  con = "hello "?
  cat = "world"?
  final = concat(con,cat)?
  
  if (babies@1.age is babies@0.age){
    printstring(final)?
  }
  return 0?
}

int doesnt_work(){
   $int arr a?
   a[0] = 1?
   This fails because arr not initialized$
}
